// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "accessibilityModeEnabled && terminalFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-workbench.action.terminal.runRecentCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+alt+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.saveFiles"
    },
    {
        "key": "ctrl+alt+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-notification.acceptPrimaryAction",
        "when": "notificationToastsVisible"
    },
    {
        "key": "ctrl+shift+a",
        "command": "codeium.openChatView",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-codeium.openChatView",
        "when": "false"
    },
    {
        "key": "ctrl+t ctrl+t",
        "command": "terminal.focus"
    },
    {
        "key": "ctrl+e ctrl+e",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+i",
        "command": "-codeium.openCodeiumCommand",
        "when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-codeium.openCodeiumCommand",
        "when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
    },
    {
        "key": "ctrl+alt+i",
        "command": "-workbench.action.chat.open",
        "when": "hasChatProvider"
    },
    {
        "key": "ctrl+shift+m",
        "command": "git.acceptMerge"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+shift+[Backslash]",
        "command": "merge-conflict.next"
    }
]
